/*
 * Copyright 2019 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 */

const ExecutionContext = require('./execution-context'),
	Credentials = require('./auth/credentials'),
	ClientConfig = require('./client-config'),
	FileRef = require('./io/file-ref'),
	CreatePDFOperation = require('./operation/create-pdf-operation'),
	CreatePDFFromHtmlOptions = require('./operation/option/createpdf/create-pdf-from-html-options'),
	PageLayout = require('./operation/option/createpdf/page-layout'),
	ExportPDFOperation = require('./operation/export-pdf-operation'),
	CombineFilesOperation = require('./operation/combine-file-operation'),
	PageRanges = require('./operation/option/page-ranges'),
	OCROperation = require('./operation/ocr-operation'),
	OCROptions = require('./operation/option/ocr/ocr-options'),
	ServiceApiError = require('./error/service-api-error'),
	ServiceUsageError = require('./error/service-usage-error');

const CreatePDF = {
		Operation: CreatePDFOperation,
		SupportedMediaTypes: CreatePDFOperation.SupportedMediaTypes,
		options: {
			html: {
				CreatePDFFromHtmlOptions
			},
			PageLayout
		}
	},

	ExportPDF = {
		Operation: ExportPDFOperation,
		SupportedTargetFormats: ExportPDFOperation.SupportedExportFormats
	},

	CombineFiles = {
		Operation: CombineFilesOperation
	},

	OCR = {
		Operation: OCROperation,
		SupportedMediaTypes: OCROperation.SupportedMediaTypes,
		options:{
			OCROptions,
			OCRSupportedLocale: OCROptions.OCRSupportedLocale,
			OCRSupportedType: OCROptions.OCRSupportedType,
		}
	},

	Error = {
		ServiceApiError: ServiceApiError,
		ServiceUsageError: ServiceUsageError
	},

	/**
	 *
	 * This module is the single entry point for clients to interact with the DC services SDK. This is the only file that
	 * a 3rd party app should require. All the necessary classes and modules required to
	 * perform operations via the SDK are exposed through this module.
	 *
	 * @module DCServicesSDK
	 *
	 */
	DCServicesSDK = {
		/**
		 *
		 * @summary Reference to the {@link Credentials} class.
		 * @instance
		 * @memberOf module:DCServicesSDK
		 * @type {Credentials}
		 *
		 */
		Credentials,

		/**
		 *
		 * @summary Reference to the {@link ClientConfig} class.
		 * @instance
		 * @memberOf module:DCServicesSDK
		 * @type {ClientConfig}
		 *
		 */
		ClientConfig,

		/**
		 *
		 * @summary Reference to the {@link ExecutionContext} class.
		 * @instance
		 * @memberOf module:DCServicesSDK
		 * @type {ExecutionContext}
		 *
		 */
		ExecutionContext,

		/**
		 * @summary Reference to the {@link FileRef} class.
		 * @instance
		 * @memberOf module:DCServicesSDK
		 * @type {FileRef}
		 *
		 */
		FileRef,

		/**
		 * @summary Object containing references to classes required for creating a PDF.
		 * @instance
		 * @memberOf module:DCServicesSDK
		 * @type {Object}
		 *
		 * @property {CreatePDFOperation} Operation - Reference to the operation class responsible for creating a PDF
		 * @property {CreatePDFOperation.SupportedMediaTypes} SupportedMediaTypes - List of supported file formats which can
		 * be converted to a PDF
		 * @property {Object} options - Contains references to configurable options of the operation
		 * @property {Object} options.html - Contains references to html file format specific configurable options
		 * @property {CreatePDFFromHtmlOptions} options.html.CreatePDFFromHtmlOptions - Reference to the configurable
		 * options class for converting an HTML web page/archive to PDF.
		 *
		 */
		CreatePDF,

		/**
		 *
		 * @summary Object containing references to classes required for exporting a PDF file.
		 * @type {Object}
		 * @memberOf module:DCServicesSDK
		 * @instance
		 * @property {ExportPDFOperation} Operation - Reference to the operation class responsible for exporting a PDF file
		 * @property {ExportPDFOperation.SupportedExportFormats} SupportedTargetFormats - Supported Target Formats to
		 * which a PDF file can be exported
		 *
		 */
		ExportPDF,

		/**
		 * @summary Object containing references to classes required for combining multiple PDF files.
		 * @memberOf module:DCServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {CombineFilesOperation} Operation - Reference to the operation class responsible for combining
		 * multiple PDF files
		 *
		 */
		CombineFiles,

		/**
		 * @summary Reference to {@link PageRanges} class.
		 * @instance
		 * @memberOf module:DCServicesSDK
		 * @type {PageRanges}
		 */
		PageRanges,

		/**
		 * @summary Object containing references to classes required to perform OCR (Optical Character Recognition)
		 * operation on a PDF file.
		 * @memberOf module:DCServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {OCROperation} Operation - Reference to the operation class responsible to perform
		 * OCR (Optical Character Recognition) to convert a PDF file into a searchable PDF file
		 * @property {OCROptions} OCROptions - Reference to the {@link OCROptions} class which provides parameters for
		 * converting a PDF to a searchable PDF using {@link OCROperation}.
		 * @property {OCROptions.OCRSupportedLocale} OCRSupportedLocales - Supported locales for {@link OCROperation}
		 * @property {OCROptions.OCRSupportedType} OCRSupportedType - Supported OCR types for {@link OCROperation}
		 */
		OCR,

		/**
		 * @summary Object containing references to error classes of DCServicesSDK.
		 * @memberOf module:DCServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {ServiceApiError} ServiceApiError - Reference to the ServiceApiError which represents the category
		 * of errors which are thrown when an underlying service API call results in an error.
		 * @property {ServiceUsageError} ServiceUsageError - Reference to the ServiceApiError which represents the
		 * category of errors which are thrown when either service usage limit has been reached or credentials quota
		 * has been exhausted.
		 */
		Error
	};

Object.freeze(DCServicesSDK);
module.exports = DCServicesSDK;
